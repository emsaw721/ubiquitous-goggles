const express = require('express');
const router = express.Router();
const db = require('../../db/connection');


function viewEmployees() {
    //Get all employees 
    // get is for reading 
    router.get('/employees', (req,res) => {
        const sql = `SELECT * FROM employee`;
        
        db.query(sql, (err,rows) => {
            if(err) {
                res.status(500).json({error: err.message});
                return; 
            }
            res.json({
                message: 'success',
                data: rows
            });
        });
    });
    }; 
    
  
    function addEmployee() {
      //create employee
    // post is for creating 
    router.post('/employees', ({body},res) => {
        const sql = `INSERT INTO candidates (id, first_name, last_name, role_id, manager_id) VALUES (?,?,?,?,?)`;
        const params = [
            body.id,
            body.first_name,
            body.last_name, 
            body.role_id,
            body.manager_id
        ];
        db.query(sql, params, (err, result) => {
            if(err) {
                res.status(400).json({error: err.message});
                return; 
            }
            res.json({
                message: 'success',
                data: body
            });
        });
    
      })
    }; 
  
    
    function updateEmployeeRole() {
    //update employee role 
    // put is for updating
        router.put('/employees/:id', (req,res) => {
            const sql = `UPDATE employees SET role_id = ?
                        WHERE id = ?`; 
            
            const params= [req.body.role_id, req.params.id];
    
            db.query(sql, params, (err,result) => {
                if(err) {
                    res.status(400).json({error: err.message});
                } else if (!result.affectedRows) {
                    res.json({
                        message: 'Employee not found'
                    });
                } else {
                    res.json({
                        message: 'Employee role updated',
                        data: req.body, 
                        changes: result.affectedRows
                    });
                }
            });
        });
    };
    
    
    function deleteEmployee() {
    // Delete employee 
    //delete is for deleting 
    router.delete('/employees/:id', (req, res) => {
        const sql = `DELETE FROM employees WHERE id =?`;
    
        db.query(sql, params.id, (err,row) => {
            if(err) {
                res.status(400).json({error: res.message});
            } else if (!result.affectedRows) {
                res.json({
                    message: 'Employee not found'
                });
            } else {
                res.json({
                    message: 'deleted',
                    changes: result.affectedRows,
                    id: req.params.id
                });
            }
        });
    }); 
    }; 
  
module.exports = router; 