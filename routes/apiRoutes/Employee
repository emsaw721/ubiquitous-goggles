const express = require('express');
const inquirer= require('inquirer');
const router = express.Router();
const db = require('../../db/connection');

class Employee {
//  function 
viewEmployees() {
    //Get all employees 
    // get is for reading 
    router.get('/employee', (req,res) => {
        const sql = `SELECT * FROM employee`;
        
        db.query(sql, (err,rows) => {
            if(err) {
                res.status(500).json({error: err.message});
                return; 
            }
            res.json({
                message: 'success',
                data: rows
            });
        });
    });
}; 
    
  
// function 
addEmployee() {
    return inquirer 
    .prompt([
        {
            type: 'text',
            name: 'first-name',
            message: "What is the employee's first name?"
        },
        {
            type: 'text',
            name: 'last-name',
            message: "What is the employee's last name?"
        },
        {
            type: 'list',
            name: 'employee-role',
            message: "What is the employee's role?",
            // somehow get the role choices from role table in order to have an up-to-date list (if user addRole). 
            // feel like it should be some sort of function or an array? 
            choices: ['Sales Lead', 'Sales Associate', 'Lead Engineer', 'Software Engineer', 'Account Manager', 'Accountant', 'Legal Team Lead', 'Lawyer']
        },
        {
            type: 'list',
            name: 'employee-manager',
            message: "Who is the employee's manager?",
            // same thing as above for here 
            choices: ['None', 'John Doe', 'Mike Chan', 'Ashley Rodriquez', 'Kevin Tupik', 'Kumal Singh', 'Malia Brown']
        }
    ])
    .then(
    
    //create employee
    // post is for creating 
    router.post('/employee', ({body},res) => {
        const sql = `INSERT INTO employee (id, first_name, last_name, role_id, manager_id) VALUES (?,?,?,?,?)`;
        const params = [
            body.id,
            body.first_name,
            body.last_name, 
            body.role_id,
            body.manager_id
        ];
        db.query(sql, params, (err, result) => {
            if(err) {
                res.status(400).json({error: err.message});
                return; 
            }
            res.json({
                message: `Added ${body.first_name}${body.last_name} to the database.`,
                data: body
            });
        });
    
      })
    )
}; 
  
    
// function 
updateEmployeeRole() {
    return inquirer
    .prompt([
        {
            type: 'list',
            name: 'employee-list',
            message: "Which employee's role do you want to update?",
            choices: ['']
        },
        {
            type: 'list',
            name: 'role-type',
            message: "What is the employee's new role?",
            choices: ['Sales Lead', 'Sales Associate', 'Lead Engineer', 'Software Engineer', 'Account Manager', 'Accountant', 'Legal Team Lead', 'Lawyer']
        }
    ])
    .then(
    //update employee role 
    // put is for updating
        router.put('/employee/:id', (req,res) => {
            const sql = `UPDATE employee SET role_id = ?
                        WHERE id = ?`; 
            
            const params= [req.body.role_id, req.params.id];
    
            db.query(sql, params, (err,result) => {
                if(err) {
                    res.status(400).json({error: err.message});
                } else if (!result.affectedRows) {
                    res.json({
                        message: 'Employee not found'
                    });
                } else {
                    res.json({
                        message: 'Employee role updated',
                        data: req.body, 
                        changes: result.affectedRows
                    });
                }
            });
        })
    )    
};
    
    
// function 
deleteEmployee() {
    // Delete employee 
    //delete is for deleting 
    router.delete('/employee/:id', (req, res) => {
        const sql = `DELETE FROM employee WHERE id =?`;
    
        db.query(sql, params.id, (err,row) => {
            if(err) {
                res.status(400).json({error: res.message});
            } else if (!result.affectedRows) {
                res.json({
                    message: 'Employee not found'
                });
            } else {
                res.json({
                    message: 'deleted',
                    changes: result.affectedRows,
                    id: req.params.id
                });
            }
        });
    }); 
}; 
}

  
//module.exports = {viewEmployees, addEmployee, updateEmployeeRole, deleteEmployee};
// module.exports = viewEmployees(); 
// module.exports = addEmployee();
// module.exports = updateEmployeeRole(); 
// module.exports = deleteEmployee(); 
module.exports = Employee; 

